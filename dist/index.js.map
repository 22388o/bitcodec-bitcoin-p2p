{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/node_modules/@bitmatrix/int53/common.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/node_modules/@bitmatrix/int53/index.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/node_modules/@bitmatrix/int53/read.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/node_modules/@bitmatrix/int53/write.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/errors.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CAllBuffer.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CArray.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CBuffer.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CNumber.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CObject.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CString.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CVarArray.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CVarBuffer.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CVarString.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/CVarUIntBitcoin.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/lib/index.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/models/NumberTypes.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/models/index.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/util.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/webpack/bootstrap","webpack://@bitmatrix/bitcodec-bitcoin-p2p/@bitmatrix/bitcodec/src/index.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./node_modules/base64-js/index.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./node_modules/buffer/index.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./node_modules/ieee754/index.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./node_modules/ip/lib/ip.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./node_modules/os-browserify/browser.js","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/index.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/lib/BooleanCodec.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/lib/InventoriesCodec.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/lib/IpCodec.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/lib/MessageCommandCodec.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/lib/MessageStructureCodec.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/lib/VersionCodec.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/models/MAGIC.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/models/Services.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/./src/models/index.ts","webpack://@bitmatrix/bitcodec-bitcoin-p2p/webpack/bootstrap","webpack://@bitmatrix/bitcodec-bitcoin-p2p/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDouble = exports.intHighLow = exports.uintHighLow = exports.onesComplement = exports.assert = exports.Int53Type = void 0;\nconst MAX_UINT32 = 0x00000000ffffffff;\nconst MAX_INT53 = 0x001fffffffffffff;\nvar Int53Type;\n(function (Int53Type) {\n    Int53Type[\"Int64BE\"] = \"Int64BE\";\n    Int53Type[\"Int64LE\"] = \"Int64LE\";\n    Int53Type[\"UInt64BE\"] = \"UInt64BE\";\n    Int53Type[\"UInt64LE\"] = \"UInt64LE\";\n})(Int53Type = exports.Int53Type || (exports.Int53Type = {}));\nconst assert = (test, message) => {\n    if (!test)\n        throw new Error(message);\n};\nexports.assert = assert;\nconst onesComplement = (number) => {\n    number = ~number;\n    if (number < 0) {\n        number = (number & 0x7fffffff) + 0x80000000;\n    }\n    return number;\n};\nexports.onesComplement = onesComplement;\nconst uintHighLow = (number) => {\n    (0, exports.assert)(number > -1 && number <= MAX_INT53, \"number out of range\");\n    (0, exports.assert)(Math.floor(number) === number, \"number must be an integer\");\n    var high = 0;\n    var signbit = number & 0xffffffff;\n    var low = signbit < 0 ? (number & 0x7fffffff) + 0x80000000 : signbit;\n    if (number > MAX_UINT32) {\n        high = (number - low) / (MAX_UINT32 + 1);\n    }\n    return [high, low];\n};\nexports.uintHighLow = uintHighLow;\nconst intHighLow = (number) => {\n    if (number > -1) {\n        return (0, exports.uintHighLow)(number);\n    }\n    var hl = (0, exports.uintHighLow)(-number);\n    var high = (0, exports.onesComplement)(hl[0]);\n    var low = (0, exports.onesComplement)(hl[1]);\n    if (low === MAX_UINT32) {\n        high += 1;\n        low = 0;\n    }\n    else {\n        low += 1;\n    }\n    return [high, low];\n};\nexports.intHighLow = intHighLow;\nconst toDouble = (high, low, signed) => {\n    if (signed && (high & 0x80000000) !== 0) {\n        high = (0, exports.onesComplement)(high);\n        low = (0, exports.onesComplement)(low);\n        (0, exports.assert)(high < 0x00200000, \"number too small\");\n        return -(high * (MAX_UINT32 + 1) + low + 1);\n    }\n    else {\n        //positive\n        (0, exports.assert)(high < 0x00200000, \"number too large\");\n        return high * (MAX_UINT32 + 1) + low;\n    }\n};\nexports.toDouble = toDouble;\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readInt53 = exports.writeInt53 = exports.Int53Type = void 0;\nvar common_1 = require(\"./common\");\nObject.defineProperty(exports, \"Int53Type\", { enumerable: true, get: function () { return common_1.Int53Type; } });\nvar write_1 = require(\"./write\");\nObject.defineProperty(exports, \"writeInt53\", { enumerable: true, get: function () { return write_1.write; } });\nvar read_1 = require(\"./read\");\nObject.defineProperty(exports, \"readInt53\", { enumerable: true, get: function () { return read_1.read; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nconst common_1 = require(\"./common\");\nconst read = (int53Type, buffer, offset = 0) => {\n    const BE = int53Type.endsWith(\"BE\");\n    const [high, low] = BE ? [buffer.readUInt32BE(offset), buffer.readUInt32BE(offset + 4)] : [buffer.readUInt32LE(offset + 4), buffer.readUInt32LE(offset)];\n    const signed = int53Type.startsWith(\"Int\");\n    return (0, common_1.toDouble)(high, low, signed);\n};\nexports.read = read;\n//# sourceMappingURL=read.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.write = void 0;\nconst common_1 = require(\"./common\");\nconst write = (int53Type, number, buffer, offset = 0) => {\n    const signed = int53Type.startsWith(\"Int\");\n    const hl = signed ? (0, common_1.intHighLow)(number) : (0, common_1.uintHighLow)(number);\n    const BE = int53Type.endsWith(\"BE\");\n    if (BE) {\n        buffer.writeUInt32BE(hl[0], offset);\n        buffer.writeUInt32BE(hl[1], offset + 4);\n    }\n    else {\n        buffer.writeUInt32LE(hl[1], offset);\n        buffer.writeUInt32LE(hl[0], offset + 4);\n    }\n};\nexports.write = write;\n//# sourceMappingURL=write.js.map","export const checkLength = (codecName: string, valueLength: number, codecLength: number) => {\n  if (valueLength !== codecLength) throw new RangeError(`${codecName} Codec: value length is not equal codec length. valueLength = ${valueLength}, codecLength = ${codecLength}.`);\n};\n\nexport const checkBufferLengthForEncode = (codecName: string, buffer: Buffer, offset: number, codecLength: number) => {\n  if (buffer.length - offset < codecLength)\n    throw new RangeError(`${codecName} Codec: buffer is too small. buffer.length = ${buffer.length}, offset = ${offset}, codecLength = ${codecLength}.`);\n};\n\nexport const checkBufferLengthForDecode = (codecName: string, offset: number, end: number, codecLength: number) => {\n  if (end - offset < codecLength) throw new RangeError(`${codecName} Codec: not enough data for decode. offset = ${offset}, end = ${end}, codecLength = ${codecLength}.`);\n};\n\nexport const checkDefined = (codecName: string, value?: any, type: \"object\" | \"array\" | \"buffer\" | \"number\" | \"string\" = \"object\") => {\n  if (value === undefined) throw new TypeError(`${codecName} Codec: value must be ${type} but got undefined.`);\n  if (type === \"buffer\" && !Buffer.isBuffer(value)) throw new TypeError(`${codecName} Codec: value must be ${type} but got undefined.`);\n};\n\nexport const typeError = (codecName: string, message: string) => {\n  throw new TypeError(`${codecName} Codec: ${message}.`);\n};\n\nexport const rangeError = (codecName: string, message: string) => {\n  throw new RangeError(`${codecName} Codec: ${message}.`);\n};\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CAllBuffer implements IBitcodec<Buffer> {\n  private length: number;\n  encodingLength = (buffer?: Buffer): number => buffer?.length || this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor() {\n    this.length = 0;\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    this.length = value.length;\n    this.encodeBytes = value.length;\n    this.decodeBytes = value.length;\n    if (!Buffer.isBuffer(value)) throw new TypeError(\"value must be a Buffer instance\"); // for CArray encode iter\n    if (!buffer) return Buffer.from(value);\n    if (offset + this.length > buffer.length) throw new RangeError(\"destination buffer is too small\");\n    value.copy(buffer, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    this.length = buffer.length;\n    this.encodeBytes = buffer.length;\n    this.decodeBytes = buffer.length;\n    if (!end) end = buffer.length;\n    this.length = buffer.length - offset;\n    if (offset + this.length > end) throw new RangeError(\"not enough data for decode\");\n    return Buffer.from(buffer.slice(offset, offset + this.length));\n  };\n}\n","import * as util from \"../util\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { checkDefined, checkLength } from \"../errors\";\n\nexport class CArray implements IBitcodec<any[]> {\n  private codecName = \"CArray\";\n  private length: number;\n  private anyCodec: IBitcodec<any>;\n\n  private calcLength = (items: any[]) => {\n    return util.calcAllLength(items, this.anyCodec.encodingLength);\n  };\n\n  encodingLength = (array?: any[]): number => {\n    checkDefined(this.codecName, array, \"array\");\n    if (array === undefined) return 0; // never\n    checkLength(this.codecName, array.length, this.length);\n    return this.calcLength(array);\n  };\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number, anyCodec: IBitcodec<any>) {\n    this.length = length;\n    this.anyCodec = anyCodec;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n  }\n\n  encode = (value: any[], buffer?: Buffer, offset = 0): Buffer => {\n    checkLength(this.codecName, value.length, this.length);\n\n    if (!buffer) buffer = Buffer.allocUnsafe(this.calcLength(value));\n    const typeEncode = this.anyCodec.encode;\n    const typeEncodeBytes = this.anyCodec.encodeBytes;\n\n    /* this.encodeBytes =\n      value.reduce((previusValue, currentItem, _) => {\n        this.anyCodec.encode(currentItem, buffer, previusValue);\n        const newAnyCodecEncodeBytes = this.anyCodec.encodeBytes;\n        return previusValue + newAnyCodecEncodeBytes;\n      }, offset) - offset; */\n\n    this.encodeBytes =\n      util.calcAllLength(\n        value,\n        function (item, index, loffset) {\n          typeEncode(item, buffer, loffset);\n          return typeEncodeBytes;\n        },\n        offset\n      ) - offset;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): any[] => {\n    if (!offset) offset = 0;\n    const items = new Array(this.length);\n\n    const typeDecode = this.anyCodec.decode;\n    const typeDecodeBytes = this.anyCodec.decodeBytes;\n\n    /* this.decodeBytes =\n      items.reduce((previusValue, currentItem, currentIndex) => {\n        items[currentIndex] = this.anyCodec.decode(buffer, previusValue, end);\n        const newAnyCodecDecodeBytes = this.anyCodec.decodeBytes;\n        return previusValue + newAnyCodecDecodeBytes;\n      }, offset + offset) - offset; */\n\n    this.decodeBytes =\n      util.calcAllLength(\n        items,\n        function (item, index, loffset) {\n          items[index || 0] = typeDecode(buffer, loffset, end);\n          return typeDecodeBytes;\n        },\n        offset\n      ) - offset;\n    return items;\n  };\n}\n","import { checkLength, checkBufferLengthForEncode, checkBufferLengthForDecode, checkDefined } from \"../errors\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CBuffer implements IBitcodec<Buffer> {\n  private codecName = \"Buffer\";\n  private length: number;\n  encodingLength = (): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number) {\n    this.length = length;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    checkDefined(this.codecName, value, \"buffer\");\n    checkLength(this.codecName, value.length, this.length);\n\n    if (!buffer) return Buffer.from(value);\n    checkBufferLengthForEncode(this.codecName, buffer, offset, this.length);\n\n    value.copy(buffer, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (!end) end = buffer.length;\n    checkBufferLengthForDecode(this.codecName, offset, end, this.length);\n\n    return Buffer.from(buffer.slice(offset, offset + this.length));\n  };\n}\n","import { Int53Type, readInt53, writeInt53 } from \"@bitmatrix/int53\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { NumberTypes } from \"../models/NumberTypes\";\n\nexport class CNumber implements IBitcodec<number> {\n  private length: number;\n  private write: (buffer: Buffer, value: number, offset?: number) => void;\n  private read: (buffer: Buffer, offset?: number | undefined) => number;\n\n  encodingLength = (number?: number): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(numberType: NumberTypes, length: number) {\n    this.length = length;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n\n    if (Buffer.prototype[\"write\" + numberType]) {\n      this.write = (buffer: Buffer, value: number, offset?: number) => {\n        return (buffer as any)[\"write\" + numberType](value, offset);\n      };\n    } else {\n      this.write = (buffer: Buffer, value: number, offset?: number) => {\n        return writeInt53(numberType as unknown as Int53Type, value, buffer, offset);\n      };\n    }\n\n    if (Buffer.prototype[\"read\" + numberType]) {\n      this.read = (buffer: Buffer, offset?: number) => {\n        return (buffer as any)[\"read\" + numberType](offset);\n      };\n    } else {\n      this.read = (buffer: Buffer, offset?: number) => {\n        return readInt53(numberType as unknown as Int53Type, buffer, offset);\n      };\n    }\n  }\n\n  encode = (value: number, buffer?: Buffer, offset = 0): Buffer => {\n    buffer = buffer || Buffer.allocUnsafe(this.length);\n    this.write(buffer, value, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): number => {\n    if (!end) return this.read(buffer, offset);\n    return this.read(buffer.slice(offset, end), 0);\n  };\n}\n","import { checkBufferLengthForEncode, checkDefined } from \"../errors\";\nimport { BitcodecItem } from \"../models/BitcodecItem\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CObject implements IBitcodec<object> {\n  private codecName = \"CObject\";\n  private items: { name: string; type: IBitcodec<any> }[];\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: object) => number;\n\n  constructor(items: BitcodecItem[]) {\n    this.items = items.map((item: BitcodecItem) => (Array.isArray(item) ? { name: item[0], type: item[1] } : item));\n\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (o?: object): number => {\n      checkDefined(this.codecName, o, \"object\");\n      if (o === undefined) return 0; // never\n\n      return this.items.reduce((previousValue: number, currentValue: { name: string; type: IBitcodec<any> }) => {\n        const value = (o as any)[currentValue.name];\n        return previousValue + currentValue.type.encodingLength(value);\n      }, 0);\n    };\n  }\n\n  encode = (object: object, buffer?: Buffer, offset = 0): Buffer => {\n    const start = offset;\n    const bytes = this.encodingLength(object);\n    if (buffer === undefined) buffer = Buffer.allocUnsafe(bytes);\n    else checkBufferLengthForEncode(this.codecName, buffer, offset, bytes);\n\n    this.items.forEach((item) => {\n      const value = (object as any)[item.name];\n      item.type.encode(value, buffer, offset);\n      offset += item.type.encodeBytes;\n    });\n    this.encodeBytes = offset - start;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset: number = 0, end?: number | undefined): object => {\n    let result = {};\n    const start = offset;\n\n    this.items.forEach((item) => {\n      const value = item.type.decode(buffer, offset, end);\n      offset += item.type.decodeBytes;\n      (result as any)[item.name] = value;\n    });\n    this.decodeBytes = offset - start;\n\n    return result;\n  };\n}\n","import { checkBufferLengthForDecode, checkBufferLengthForEncode, checkLength } from \"../errors\";\nimport { EncodingType } from \"../models/EncodingType\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CBuffer } from \"./CBuffer\";\n\n// https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_string\nexport class CString implements IBitcodec<string> {\n  private codecName = \"String\";\n  private length: number;\n  private bufferCodec: IBitcodec<Buffer>;\n  private encodingType: EncodingType;\n\n  encodingLength = (value?: string) => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number, encodingType: EncodingType = \"utf8\") {\n    this.length = length;\n    this.encodingType = encodingType;\n    this.bufferCodec = new CBuffer(this.length);\n\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n  }\n\n  encode = (value: string, buffer?: Buffer, offset = 0): Buffer => {\n    checkLength(this.codecName, Buffer.byteLength(value, this.encodingType), this.length);\n\n    if (!buffer) return Buffer.from(value, this.encodingType);\n    checkBufferLengthForEncode(this.codecName, buffer, offset, this.length);\n\n    buffer.write(value, offset, length, this.encodingType);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): string => {\n    checkBufferLengthForDecode(this.codecName, offset, end || buffer.length, this.length);\n    return this.bufferCodec.decode(buffer, offset, end).toString(this.encodingType);\n  };\n}\n","import * as util from \"../util\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { checkDefined } from \"../errors\";\n\nexport class CVarArray implements IBitcodec<any[]> {\n  private codecName = \"CVarArray\";\n  private length: number = -1;\n  private lengthType: IBitcodec<any>;\n  private anyCodec: IBitcodec<any>;\n\n  private calcLength = (items: any[]) => {\n    return util.calcAllLength(items, this.anyCodec.encodingLength, this.lengthType.encodingLength(items.length));\n  };\n\n  encodingLength = (array?: any[]): number => {\n    checkDefined(this.codecName, array, \"array\");\n    if (array === undefined) return 0; // never\n    return this.calcLength(array);\n  };\n\n  encodeBytes: number = -1;\n  decodeBytes: number = -1;\n\n  constructor(lengthType: IBitcodec<any>, anyCodec: IBitcodec<any>) {\n    this.lengthType = lengthType;\n    this.anyCodec = anyCodec;\n  }\n\n  encode = (value: any[], buffer?: Buffer, offset = 0): Buffer => {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.calcLength(value));\n\n    this.lengthType.encode(value.length, buffer, offset);\n\n    /* this.encodeBytes =\n      value.reduce((previusValue, currentItem, _) => {\n        this.anyCodec.encode(currentItem, buffer, previusValue);\n        const newAnyCodecEncodeBytes = this.anyCodec.encodeBytes;\n        return previusValue + newAnyCodecEncodeBytes;\n      }, this.lengthType.encodeBytes + offset) - offset; */\n\n    this.encodeBytes =\n      util.calcAllLength(\n        value,\n        (item, index, loffset) => {\n          this.anyCodec.encode(item, buffer, loffset);\n          return this.anyCodec.encodeBytes;\n        },\n        this.lengthType.encodeBytes + offset\n      ) - offset;\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): any[] => {\n    if (!offset) offset = 0;\n    const items = new Array(this.lengthType.decode(buffer, offset, end));\n\n    /* this.decodeBytes =\n      items.reduce((previusValue, currentItem, currentIndex) => {\n        items[currentIndex] = this.anyCodec.decode(buffer, previusValue, end);\n        const newAnyCodecDecodeBytes = this.anyCodec.decodeBytes;\n        return previusValue + newAnyCodecDecodeBytes;\n      }, this.lengthType.decodeBytes + offset) - offset; */\n\n    this.decodeBytes =\n      util.calcAllLength(\n        items,\n        (item, index, loffset) => {\n          items[index || 0] = this.anyCodec.decode(buffer, loffset, end);\n          return this.anyCodec.decodeBytes;\n        },\n        this.lengthType.decodeBytes + offset\n      ) - offset;\n    return items;\n  };\n}\n","import { checkBufferLengthForDecode, checkBufferLengthForEncode, checkDefined } from \"../errors\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CNumber } from \"./CNumber\";\nimport { CVarUIntBitcoin } from \"./CVarUIntBitcoin\";\n\nexport class CVarBuffer implements IBitcodec<any> {\n  private codecName = \"VarBuffer\";\n  private anyCodec: IBitcodec<any>;\n  encodingLength: (buffer?: Buffer) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(anyCodec: IBitcodec<CNumber | CVarUIntBitcoin>) {\n    this.anyCodec = anyCodec;\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (buffer?: Buffer) => {\n      checkDefined(this.codecName, buffer, \"buffer\"); // for CArray encode iter\n      if (buffer !== undefined) return this.anyCodec.encodingLength(buffer.length) + buffer.length;\n      return 0; // never\n    };\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    const bytes = this.encodingLength(value);\n    if (!buffer) buffer = Buffer.allocUnsafe(bytes);\n    else checkBufferLengthForEncode(this.codecName, buffer, offset, bytes);\n\n    this.anyCodec.encode(value.length, buffer, offset);\n    offset += this.anyCodec.encodeBytes;\n\n    value.copy(buffer, offset);\n    this.encodeBytes = bytes;\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (end === undefined) end = buffer.length;\n    const start = offset;\n    const length = this.anyCodec.decode(buffer, offset, end);\n    offset += this.anyCodec.decodeBytes;\n    checkBufferLengthForDecode(this.codecName, offset, end, length);\n\n    this.decodeBytes = offset + length - start;\n    return Buffer.from(buffer.slice(offset, offset + length));\n  };\n}\n","import { checkDefined } from \"../errors\";\nimport { EncodingType } from \"../models/EncodingType\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CVarBuffer } from \"./CVarBuffer\";\n\nexport class CVarString implements IBitcodec<string> {\n  private codecName = \"CVarString\";\n  private anyCodec: IBitcodec<any>;\n  private encodingType: EncodingType;\n  private varBufferCodec: CVarBuffer;\n  encodingLength: (value?: string) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(anyCodec: IBitcodec<any>, encodingType: EncodingType = \"utf8\") {\n    this.anyCodec = anyCodec;\n    this.encodingType = encodingType;\n    this.varBufferCodec = new CVarBuffer(anyCodec);\n\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (value?: string) => {\n      checkDefined(this.codecName, value, \"string\");\n      if (value === undefined) return 0; // never;\n\n      const valueLength = Buffer.byteLength(value, this.encodingType);\n      return this.anyCodec.encodingLength(value.length) + valueLength;\n    };\n  }\n\n  encode = (value: string, buffer?: Buffer, offset = 0): Buffer => {\n    const valueLength = Buffer.byteLength(value, this.encodingType);\n    const bytes = this.anyCodec.encodingLength(value.length) + valueLength;\n\n    if (!buffer) buffer = Buffer.allocUnsafe(bytes);\n    if (offset + bytes > buffer.length) throw new RangeError(\"destination buffer is too small\");\n\n    this.anyCodec.encode(valueLength, buffer, offset);\n    offset += this.anyCodec.encodeBytes;\n    buffer.write(value, offset, valueLength, this.encodingType);\n\n    this.encodeBytes = bytes;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): string => {\n    const str = this.varBufferCodec.decode(buffer, offset, end).toString(this.encodingType);\n    this.decodeBytes = this.varBufferCodec.decodeBytes;\n    return str;\n  };\n}\n","import { checkDefined, rangeError, typeError } from \"../errors\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\n// https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer\nexport class CVarUIntBitcoin implements IBitcodec<number> {\n  private codecName = \"VarUIntBitcoin\";\n  private MAX_SAFE_INTEGER: number = 9007199254740991;\n\n  private checkUInt53 = (n: number) => {\n    if (n < 0 || n > this.MAX_SAFE_INTEGER) rangeError(this.codecName, `out of range value. min = 0, max = ${this.MAX_SAFE_INTEGER}, value = ${n}`);\n    if (n % 1 !== 0) typeError(this.codecName, `value is not an integer. value = ${n}`);\n  };\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (number?: number) => number;\n\n  constructor() {\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n    this.encodingLength = (number?: number) => {\n      checkDefined(this.codecName, number, \"number\");\n      if (number === undefined) return 0; // never\n\n      this.checkUInt53(number);\n      return number < 0xfd ? 1 : number <= 0xffff ? 3 : number <= 0xffffffff ? 5 : 9;\n    };\n  }\n\n  encode = (value: number, buffer?: Buffer, offset: number = 0): Buffer => {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.encodingLength(value));\n\n    // 8 bit\n    if (value < 0xfd) {\n      buffer.writeUInt8(value, offset);\n      this.encodeBytes = 1;\n\n      // 16 bit\n    } else if (value <= 0xffff) {\n      buffer.writeUInt8(0xfd, offset);\n      buffer.writeUInt16LE(value, offset + 1);\n      this.encodeBytes = 3;\n\n      // 32 bit\n    } else if (value <= 0xffffffff) {\n      buffer.writeUInt8(0xfe, offset);\n      buffer.writeUInt32LE(value, offset + 1);\n      this.encodeBytes = 5;\n\n      // 64 bit\n    } else {\n      buffer.writeUInt8(0xff, offset);\n      buffer.writeUInt32LE(value >>> 0, offset + 1);\n      buffer.writeUInt32LE((value / 0x100000000) | 0, offset + 5);\n      this.encodeBytes = 9;\n    }\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset: number = 0, end?: number): number => {\n    const first = buffer.readUInt8(offset);\n\n    // 8 bit\n    if (first < 0xfd) {\n      this.decodeBytes = 1;\n      return first;\n\n      // 16 bit\n    } else if (first === 0xfd) {\n      this.decodeBytes = 3;\n      return buffer.readUInt16LE(offset + 1);\n\n      // 32 bit\n    } else if (first === 0xfe) {\n      this.decodeBytes = 5;\n      return buffer.readUInt32LE(offset + 1);\n\n      // 64 bit\n    } else {\n      this.decodeBytes = 9;\n      var lo = buffer.readUInt32LE(offset + 1);\n      var hi = buffer.readUInt32LE(offset + 5);\n      var number = hi * 0x0100000000 + lo;\n      this.checkUInt53(number);\n\n      return number;\n    }\n  };\n}\n","export { CAllBuffer } from \"./CAllBuffer\";\nexport { CArray } from \"./CArray\";\nexport { CBuffer } from \"./CBuffer\";\nexport { CNumber } from \"./CNumber\";\nexport { CObject } from \"./CObject\";\nexport { CString } from \"./CString\";\nexport { CVarArray } from \"./CVarArray\";\nexport { CVarBuffer } from \"./CVarBuffer\";\nexport { CVarString } from \"./CVarString\";\nexport { CVarUIntBitcoin } from \"./CVarUIntBitcoin\";\n","export enum NumberTypes {\n  Byte = \"UInt8\",\n  Int8 = \"Int8\",\n  UInt8 = \"UInt8\",\n  Int16BE = \"Int16BE\",\n  Int16LE = \"Int16LE\",\n  UInt16BE = \"UInt16BE\",\n  UInt16LE = \"UInt16LE\",\n  Int32BE = \"Int32BE\",\n  Int32LE = \"Int32LE\",\n  UInt32BE = \"UInt32BE\",\n  UInt32LE = \"UInt32LE\",\n  Int64BE = \"Int64BE\",\n  Int64LE = \"Int64LE\",\n  UInt64BE = \"UInt64BE\",\n  UInt64LE = \"UInt64LE\",\n  FloatBE = \"FloatBE\",\n  FloatLE = \"FloatLE\",\n  DoubleBE = \"DoubleBE\",\n  DoubleLE = \"DoubleLE\",\n}\n","export { BitcodecItem } from \"./BitcodecItem\";\nexport { EncodingType } from \"./EncodingType\";\nexport { IBitcodec } from \"./IBitcodec\";\nexport { NumberTypes } from \"./NumberTypes\";\n","export const calcAllLength = <T>(items: T[], calcLength: (item?: T, itemIndex?: number, itemOffset?: number) => number, allOffset: number = 0) => {\n  let lOffset = allOffset;\n  for (let i = 0; i < items.length; i++) lOffset += calcLength(items[i], i, lOffset);\n  return lOffset;\n\n  /* return items.reduce((previusValue, currentItem, currentIndex) => {\n    return previusValue + iter(items[currentIndex], currentIndex, previusValue);\n  }, acc); */\n};\n\nexport function buffer2hex(obj: any) {\n  if (Buffer.isBuffer(obj)) return obj.toString(\"hex\");\n  else if (Array.isArray(obj)) obj = obj.map(buffer2hex);\n  else if (typeof obj === \"object\") {\n    for (var k in obj) {\n      obj[k] = buffer2hex(obj[k]);\n    }\n  }\n\n  return obj;\n}\n\nexport function isHex(s: string) {\n  return s.length % 2 === 0 && /^[0-9a-f]*$/.test(s.toLowerCase());\n}\n\nexport function hex2buffer(obj: any) {\n  if (Buffer.isBuffer(obj)) return obj;\n  else if (typeof obj === \"string\" && isHex(obj)) return Buffer.from(obj, \"hex\");\n  else if (typeof obj === \"object\") {\n    for (var k in obj) {\n      obj[k] = hex2buffer(obj[k]);\n    }\n  } else if (Array.isArray(obj)) obj = obj.map(hex2buffer);\n\n  return obj;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { BitcodecItem, EncodingType, IBitcodec, NumberTypes } from \"./models\";\nimport { CAllBuffer, CArray, CBuffer, CNumber, CObject, CString, CVarArray, CVarBuffer, CVarString, CVarUIntBitcoin } from \"./lib\";\n\nconst bitcodec = {\n  AllBuffer: new CAllBuffer(),\n  Array: (length: number, anyCodec: IBitcodec<any>) => new CArray(length, anyCodec),\n  Buffer: (length: number) => new CBuffer(length),\n  Byte: new CNumber(NumberTypes.UInt8, 1),\n  Number: {\n    Int8: new CNumber(NumberTypes.Int8, 1),\n    UInt8: new CNumber(NumberTypes.UInt8, 1),\n    Int16BE: new CNumber(NumberTypes.Int16BE, 2),\n    Int16LE: new CNumber(NumberTypes.Int16LE, 2),\n    UInt16BE: new CNumber(NumberTypes.UInt16BE, 2),\n    UInt16LE: new CNumber(NumberTypes.UInt16LE, 2),\n    Int32BE: new CNumber(NumberTypes.Int32BE, 4),\n    Int32LE: new CNumber(NumberTypes.Int32LE, 4),\n    UInt32BE: new CNumber(NumberTypes.UInt32BE, 4),\n    UInt32LE: new CNumber(NumberTypes.UInt32LE, 4),\n    Int64BE: new CNumber(NumberTypes.Int64BE, 8),\n    Int64LE: new CNumber(NumberTypes.Int64LE, 8),\n    UInt64BE: new CNumber(NumberTypes.UInt64BE, 8),\n    UInt64LE: new CNumber(NumberTypes.UInt64LE, 8),\n    FloatBE: new CNumber(NumberTypes.FloatBE, 4),\n    FloatLE: new CNumber(NumberTypes.FloatLE, 4),\n    DoubleBE: new CNumber(NumberTypes.DoubleBE, 8),\n    DoubleLE: new CNumber(NumberTypes.DoubleLE, 8),\n  },\n  Object: (items: BitcodecItem[]) => new CObject(items),\n  String: (length: number, encodingType: EncodingType = \"utf8\") => new CString(length, encodingType),\n  VarArray: (lengthType: IBitcodec<any>, anyCodec: IBitcodec<any>) => new CVarArray(lengthType, anyCodec),\n  VarBuffer: (anyCodec: IBitcodec<any>) => new CVarBuffer(anyCodec),\n  VarString: (anyCodec: IBitcodec<any>, encodingType: EncodingType = \"utf8\") => new CVarString(anyCodec, encodingType),\n  VarUIntBitcoin: new CVarUIntBitcoin(),\n};\n\nexport default bitcodec;\nexport { IBitcodec };\nexport { hex2buffer, buffer2hex } from \"./util\";\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nvar ip = exports;\nvar Buffer = require('buffer').Buffer;\nvar os = require('os');\n\nip.toBuffer = function(ip, buff, offset) {\n  offset = ~~offset;\n\n  var result;\n\n  if (this.isV4Format(ip)) {\n    result = buff || new Buffer(offset + 4);\n    ip.split(/\\./g).map(function(byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (this.isV6Format(ip)) {\n    var sections = ip.split(':', 8);\n\n    var i;\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = this.isV4Format(sections[i]);\n      var v4Buffer;\n\n      if (isv4) {\n        v4Buffer = this.toBuffer(sections[i]);\n        sections[i] = v4Buffer.slice(0, 2).toString('hex');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0');\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0');\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      var argv = [ i, 1 ];\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n      sections.splice.apply(sections, argv);\n    }\n\n    result = buff || new Buffer(offset + 16);\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16);\n      result[offset++] = (word >> 8) & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip);\n  }\n\n  return result;\n};\n\nip.toString = function(buff, offset, length) {\n  offset = ~~offset;\n  length = length || (buff.length - offset);\n\n  var result = [];\n  if (length === 4) {\n    // IPv4\n    for (var i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n    result = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (var i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16));\n    }\n    result = result.join(':');\n    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    result = result.replace(/:{3,4}/, '::');\n  }\n\n  return result;\n};\n\nvar ipv4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\nvar ipv6Regex =\n    /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n\nip.isV4Format = function(ip) {\n  return ipv4Regex.test(ip);\n};\n\nip.isV6Format = function(ip) {\n  return ipv6Regex.test(ip);\n};\nfunction _normalizeFamily(family) {\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nip.fromPrefixLen = function(prefixlen, family) {\n  if (prefixlen > 32) {\n    family = 'ipv6';\n  } else {\n    family = _normalizeFamily(family);\n  }\n\n  var len = 4;\n  if (family === 'ipv6') {\n    len = 16;\n  }\n  var buff = new Buffer(len);\n\n  for (var i = 0, n = buff.length; i < n; ++i) {\n    var bits = 8;\n    if (prefixlen < 8) {\n      bits = prefixlen;\n    }\n    prefixlen -= bits;\n\n    buff[i] = ~(0xff >> bits) & 0xff;\n  }\n\n  return ip.toString(buff);\n};\n\nip.mask = function(addr, mask) {\n  addr = ip.toBuffer(addr);\n  mask = ip.toBuffer(mask);\n\n  var result = new Buffer(Math.max(addr.length, mask.length));\n\n  var i = 0;\n  // Same protocol - do bitwise and\n  if (addr.length === mask.length) {\n    for (i = 0; i < addr.length; i++) {\n      result[i] = addr[i] & mask[i];\n    }\n  } else if (mask.length === 4) {\n    // IPv6 address and IPv4 mask\n    // (Mask low bits)\n    for (i = 0; i < mask.length; i++) {\n      result[i] = addr[addr.length - 4  + i] & mask[i];\n    }\n  } else {\n    // IPv6 mask and IPv4 addr\n    for (var i = 0; i < result.length - 6; i++) {\n      result[i] = 0;\n    }\n\n    // ::ffff:ipv4\n    result[10] = 0xff;\n    result[11] = 0xff;\n    for (i = 0; i < addr.length; i++) {\n      result[i + 12] = addr[i] & mask[i + 12];\n    }\n    i = i + 12;\n  }\n  for (; i < result.length; i++)\n    result[i] = 0;\n\n  return ip.toString(result);\n};\n\nip.cidr = function(cidrString) {\n  var cidrParts = cidrString.split('/');\n\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2)\n    throw new Error('invalid CIDR subnet: ' + addr);\n\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.mask(addr, mask);\n};\n\nip.subnet = function(addr, mask) {\n  var networkAddress = ip.toLong(ip.mask(addr, mask));\n\n  // Calculate the mask's length.\n  var maskBuffer = ip.toBuffer(mask);\n  var maskLength = 0;\n\n  for (var i = 0; i < maskBuffer.length; i++) {\n    if (maskBuffer[i] === 0xff) {\n      maskLength += 8;\n    } else {\n      var octet = maskBuffer[i] & 0xff;\n      while (octet) {\n        octet = (octet << 1) & 0xff;\n        maskLength++;\n      }\n    }\n  }\n\n  var numberOfAddresses = Math.pow(2, 32 - maskLength);\n\n  return {\n    networkAddress: ip.fromLong(networkAddress),\n    firstAddress: numberOfAddresses <= 2 ?\n                    ip.fromLong(networkAddress) :\n                    ip.fromLong(networkAddress + 1),\n    lastAddress: numberOfAddresses <= 2 ?\n                    ip.fromLong(networkAddress + numberOfAddresses - 1) :\n                    ip.fromLong(networkAddress + numberOfAddresses - 2),\n    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),\n    subnetMask: mask,\n    subnetMaskLength: maskLength,\n    numHosts: numberOfAddresses <= 2 ?\n                numberOfAddresses : numberOfAddresses - 2,\n    length: numberOfAddresses,\n    contains: function(other) {\n      return networkAddress === ip.toLong(ip.mask(other, mask));\n    }\n  };\n};\n\nip.cidrSubnet = function(cidrString) {\n  var cidrParts = cidrString.split('/');\n\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2)\n    throw new Error('invalid CIDR subnet: ' + addr);\n\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.subnet(addr, mask);\n};\n\nip.not = function(addr) {\n  var buff = ip.toBuffer(addr);\n  for (var i = 0; i < buff.length; i++) {\n    buff[i] = 0xff ^ buff[i];\n  }\n  return ip.toString(buff);\n};\n\nip.or = function(a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // same protocol\n  if (a.length === b.length) {\n    for (var i = 0; i < a.length; ++i) {\n      a[i] |= b[i];\n    }\n    return ip.toString(a);\n\n  // mixed protocols\n  } else {\n    var buff = a;\n    var other = b;\n    if (b.length > a.length) {\n      buff = b;\n      other = a;\n    }\n\n    var offset = buff.length - other.length;\n    for (var i = offset; i < buff.length; ++i) {\n      buff[i] |= other[i - offset];\n    }\n\n    return ip.toString(buff);\n  }\n};\n\nip.isEqual = function(a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // Same protocol\n  if (a.length === b.length) {\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n\n  // Swap\n  if (b.length === 4) {\n    var t = b;\n    b = a;\n    a = t;\n  }\n\n  // a - IPv4, b - IPv6\n  for (var i = 0; i < 10; i++) {\n    if (b[i] !== 0) return false;\n  }\n\n  var word = b.readUInt16BE(10);\n  if (word !== 0 && word !== 0xffff) return false;\n\n  for (var i = 0; i < 4; i++) {\n    if (a[i] !== b[i + 12]) return false;\n  }\n\n  return true;\n};\n\nip.isPrivate = function(addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr) ||\n    /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr) ||\n    /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^f[cd][0-9a-f]{2}:/i.test(addr) ||\n    /^fe80:/i.test(addr) ||\n    /^::1$/.test(addr) ||\n    /^::$/.test(addr);\n};\n\nip.isPublic = function(addr) {\n  return !ip.isPrivate(addr);\n};\n\nip.isLoopback = function(addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/\n      .test(addr) ||\n    /^fe80::1$/.test(addr) ||\n    /^::1$/.test(addr) ||\n    /^::$/.test(addr);\n};\n\nip.loopback = function(family) {\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n};\n\n//\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\nip.address = function(name, family) {\n  var interfaces = os.networkInterfaces();\n  var all;\n\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n  if (name && name !== 'private' && name !== 'public') {\n    var res = interfaces[name].filter(function(details) {\n      var itemFamily = details.family.toLowerCase();\n      return itemFamily === family;\n    });\n    if (res.length === 0)\n      return undefined;\n    return res[0].address;\n  }\n\n  var all = Object.keys(interfaces).map(function (nic) {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    var addresses = interfaces[nic].filter(function (details) {\n      details.family = details.family.toLowerCase();\n      if (details.family !== family || ip.isLoopback(details.address)) {\n        return false;\n      } else if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? ip.isPrivate(details.address) :\n          ip.isPublic(details.address);\n    });\n\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n\n  return !all.length ? ip.loopback(family) : all[0];\n};\n\nip.toLong = function(ip) {\n  var ipl = 0;\n  ip.split('.').forEach(function(octet) {\n    ipl <<= 8;\n    ipl += parseInt(octet);\n  });\n  return(ipl >>> 0);\n};\n\nip.fromLong = function(ipl) {\n  return ((ipl >>> 24) + '.' +\n      (ipl >> 16 & 255) + '.' +\n      (ipl >> 8 & 255) + '.' +\n      (ipl & 255) );\n};\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","import { InventoriesCodec } from \"./lib/InventoriesCodec\";\nimport { MessageStructureCodec } from \"./lib/MessageStructureCodec\";\nimport { VersionCodec } from \"./lib/VersionCodec\";\n\nexport * from \"./models\";\nexport { MessageStructureCodec, VersionCodec, InventoriesCodec };\n","import bitcodec, { IBitcodec } from \"@bitmatrix/bitcodec\";\n\nclass _BooleanCodec implements IBitcodec<boolean> {\n  private byteCodec = bitcodec.Number.UInt8;\n  encodeBytes: number = 1;\n  decodeBytes: number = 1;\n  encodingLength = (t?: any) => 1;\n  encode = (value: boolean, buffer?: Buffer, offset?: number): Buffer => this.byteCodec.encode(+!!value, buffer, offset);\n  decode = (buffer: Buffer, offset?: number, end?: number): boolean => !!this.byteCodec.decode(buffer, offset, end);\n}\n\nexport const BooleanCodec = new _BooleanCodec();\n","import bitcodec from \"@bitmatrix/bitcodec\";\n\nconst _Inventory = bitcodec.Object([\n  [\"type\", bitcodec.Number.Int32LE],\n  [\"hash\", bitcodec.Buffer(32)],\n]);\nexport const InventoriesCodec = bitcodec.VarArray(bitcodec.VarUIntBitcoin, _Inventory);\n","import * as ip from \"ip\";\nimport { IBitcodec } from \"@bitmatrix/bitcodec\";\n\nexport class IpCodec implements IBitcodec<string> {\n  private IPV4_PREFIX = Buffer.from(\"00000000000000000000ffff\", \"hex\");\n  encodeBytes: number = 16;\n  decodeBytes: number = 16;\n  encodingLength = (t?: any) => 16;\n\n  encode = (value: string, buffer?: Buffer | undefined, offset?: number | undefined): Buffer => {\n    if (!buffer) buffer = Buffer.alloc(16);\n    if (!offset) offset = 0;\n    if (offset + 16 > buffer.length) throw new RangeError(\"destination buffer is too small\");\n\n    if (ip.isV4Format(value)) {\n      this.IPV4_PREFIX.copy(buffer, offset);\n      ip.toBuffer(value, buffer, offset + 12);\n    } else if (ip.isV6Format(value)) {\n      ip.toBuffer(value, buffer, offset);\n    } else {\n      throw Error(\"Invalid IP address value\");\n    }\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset?: number | undefined, end?: number | undefined): string => {\n    if (!offset) offset = 0;\n    if (!end) end = buffer.length;\n    if (offset + 16 > end) throw new RangeError(\"not enough data for decode\");\n\n    let start = buffer.slice(offset, offset + 12).equals(this.IPV4_PREFIX) ? 12 : 0;\n    return ip.toString(buffer.slice(offset + start, offset + 16));\n  };\n}\n","import bitcodec, { IBitcodec } from \"@bitmatrix/bitcodec\";\n\nexport class MessageCommandCodec implements IBitcodec<string> {\n  private buffer12 = bitcodec.Buffer(12);\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: string | undefined) => number;\n\n  constructor() {\n    this.encodeBytes = this.buffer12.encodeBytes;\n    this.decodeBytes = this.buffer12.decodeBytes;\n    this.encodingLength = this.buffer12.encodingLength;\n  }\n\n  encode = (value: string, buffer?: Buffer, offset?: number): Buffer => {\n    const bvalue = Buffer.from(value, \"ascii\");\n    const nvalue = Buffer.alloc(12);\n    bvalue.copy(nvalue, 0);\n    for (let i = bvalue.length; i < nvalue.length; ++i) nvalue[i] = 0;\n    return this.buffer12.encode(nvalue, buffer, offset);\n  };\n\n  decode = (buffer: Buffer, offset?: number, end?: number): string => {\n    const bvalue = this.buffer12.decode(buffer, offset, end);\n\n    let stop;\n    for (stop = 0; bvalue[stop] !== 0; ++stop) {\n      if (stop === 11) {\n        throw Error(\"Non-terminated string. Are you sure this is a Bitcoin packet?\");\n      }\n    }\n\n    for (let i = stop; i < bvalue.length; ++i) {\n      if (bvalue[i] !== 0) {\n        throw Error(\"Found a non-null byte after the first null byte in a null-padded string\");\n      }\n    }\n    return bvalue.slice(0, stop).toString(\"ascii\");\n  };\n}\n","import bitcodec, { buffer2hex, hex2buffer } from \"@bitmatrix/bitcodec\";\nimport { MessageStructure } from \"../models/MessageStructure\";\nimport { MessageCommandCodec } from \"./MessageCommandCodec\";\n\nconst _MessageStructureCodec = bitcodec.Object([\n  [\"magic\", bitcodec.Number.UInt32LE],\n  [\"command\", new MessageCommandCodec()],\n  [\"length\", bitcodec.Number.UInt32LE],\n  [\"checksum\", bitcodec.Buffer(4)],\n  [\"payload\", bitcodec.AllBuffer],\n]);\n\nexport const MessageStructureCodec = {\n  decode: (hex: string): MessageStructure<string> => {\n    return buffer2hex(_MessageStructureCodec.decode(hex2buffer(hex)));\n  },\n\n  encode: (obj: MessageStructure<string>): string => {\n    return buffer2hex(_MessageStructureCodec.encode(hex2buffer(obj)));\n  },\n};\n","import bitcodec from \"@bitmatrix/bitcodec\";\nimport { BooleanCodec } from \"./BooleanCodec\";\nimport { IpCodec } from \"./IpCodec\";\n\nconst addr = bitcodec.Object([\n  [\"services\", bitcodec.Buffer(8)],\n  [\"ip\", new IpCodec()],\n  [\"port\", bitcodec.Number.UInt16BE],\n]);\n\nexport const VersionCodec = bitcodec.Object([\n  [\"version\", bitcodec.Number.Int32LE],\n  [\"services\", bitcodec.Buffer(8)],\n  [\"timestamp\", bitcodec.Number.Int64LE],\n  [\"addrRecv\", addr],\n  [\"addrFrom\", addr],\n  [\"nonce\", bitcodec.Buffer(8)],\n  [\"userAgent\", bitcodec.VarString(bitcodec.VarUIntBitcoin, \"ascii\")],\n  [\"startHeight\", bitcodec.Number.Int32LE],\n  [\"relay\", BooleanCodec],\n]);\n","// https://en.bitcoin.it/wiki/Protocol_documentation#Message_structure\nexport enum MAGIC {\n  Mainnet = 0xd9b4bef9, // 3652501241\n  Regtest = 0xdab5bffa, // 3669344250\n  Testnet3 = 0x0709110b, // 118034699\n  Signet = 0x40cf030a, // 1087308554 (default)\n  Namecoin = 0xfeb4bef9, // 4273258233\n}\n","// https://en.bitcoin.it/wiki/Protocol_documentation#version\nexport enum SERVICE_BIT_NAME {\n  NODE_NETWORK,\n  NODE_GETUTXO,\n  NODE_BLOOM,\n  NODE_WITNESS,\n  NODE_XTHIN,\n  NODE_COMPACT_FILTERS,\n  NODE_NETWORK_LIMITED,\n}\nexport enum SERVICE_BIT_VALUE {\n  NODE_NETWORK = 0, // This node can be asked for full blocks instead of just headers.\n  NODE_GETUTXO = 1, // See BIP 0064\n  NODE_BLOOM = 2, // See BIP 0111\n  NODE_WITNESS = 3, // See BIP 0144\n  NODE_XTHIN = 4, // Never formally proposed (as a BIP), and discontinued. Was historically sporadically seen on the network.\n  NODE_COMPACT_FILTERS = 6, // See BIP 0157\n  NODE_NETWORK_LIMITED = 10, // See BIP 0159\n}\n\nexport const SERVICE_BITS = [\n  { name: SERVICE_BIT_NAME.NODE_NETWORK, bit: SERVICE_BIT_VALUE.NODE_NETWORK },\n  { name: SERVICE_BIT_NAME.NODE_GETUTXO, bit: SERVICE_BIT_VALUE.NODE_GETUTXO },\n  { name: SERVICE_BIT_NAME.NODE_BLOOM, bit: SERVICE_BIT_VALUE.NODE_BLOOM },\n  { name: SERVICE_BIT_NAME.NODE_WITNESS, bit: SERVICE_BIT_VALUE.NODE_WITNESS },\n  { name: SERVICE_BIT_NAME.NODE_XTHIN, bit: SERVICE_BIT_VALUE.NODE_XTHIN },\n  { name: SERVICE_BIT_NAME.NODE_COMPACT_FILTERS, bit: SERVICE_BIT_VALUE.NODE_COMPACT_FILTERS },\n  { name: SERVICE_BIT_NAME.NODE_NETWORK_LIMITED, bit: SERVICE_BIT_VALUE.NODE_NETWORK_LIMITED },\n];\n\nexport type Services = SERVICE_BIT_NAME[];\n","export * from \"./BlockHeadersMessage\";\nexport * from \"./BlockMessage\";\nexport * from \"./Inventory\";\nexport * from \"./MAGIC\";\nexport * from \"./MessageStructure\";\nexport * from \"./NetworkAddress\";\nexport * from \"./PingPong\";\nexport * from \"./Services\";\nexport * from \"./Verack\";\nexport * from \"./Version\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["Object","defineProperty","exports","value","toDouble","intHighLow","uintHighLow","onesComplement","assert","Int53Type","MAX_UINT32","test","message","Error","number","Math","floor","high","signbit","low","hl","signed","readInt53","writeInt53","common_1","enumerable","get","write_1","write","read_1","read","int53Type","buffer","offset","BE","endsWith","readUInt32BE","readUInt32LE","startsWith","writeUInt32BE","writeUInt32LE","checkLength","codecName","valueLength","codecLength","RangeError","checkBufferLengthForEncode","length","checkBufferLengthForDecode","end","checkDefined","type","TypeError","Buffer","isBuffer","t","typeError","rangeError","encodingLength","this","encodeBytes","decodeBytes","constructor","encode","from","copy","decode","slice","i","anyCodec","calcLength","items","util","calcAllLength","array","allocUnsafe","typeEncode","typeEncodeBytes","item","index","loffset","Array","typeDecode","typeDecodeBytes","numberType","prototype","r","map","isArray","name","o","reduce","previousValue","currentValue","object","start","bytes","forEach","result","bufferCodec","encodingType","CBuffer","byteLength","toString","lengthType","varBufferCodec","CVarBuffer","str","MAX_SAFE_INTEGER","checkUInt53","n","writeUInt8","writeUInt16LE","first","readUInt8","readUInt16LE","lo","CAllBuffer","CArray","CNumber","CObject","CString","CVarArray","CVarString","CVarUIntBitcoin","NumberTypes","Byte","Int8","UInt8","Int16BE","Int16LE","UInt16BE","UInt16LE","Int32BE","Int32LE","UInt32BE","UInt32LE","Int64BE","Int64LE","UInt64BE","UInt64LE","FloatBE","FloatLE","DoubleBE","DoubleLE","isHex","s","toLowerCase","allOffset","lOffset","buffer2hex","obj","k","hex2buffer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","call","bitcodec","AllBuffer","Number","String","VarArray","VarBuffer","VarString","VarUIntBitcoin","e","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","code","indexOf","num","output","base64","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","string","encoding","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","checked","undefined","numberIsNaN","data","fromObject","toPrimitive","assertSize","size","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUint16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUint16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","super","writable","configurable","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","isNaN","log","LN2","ip","os","toBuffer","buff","isV4Format","byte","isV6Format","sections","v4Buffer","splice","unshift","argv","word","ipv4Regex","ipv6Regex","_normalizeFamily","family","fromPrefixLen","prefixlen","bits","mask","addr","cidr","cidrString","cidrParts","subnet","networkAddress","toLong","maskBuffer","maskLength","octet","numberOfAddresses","fromLong","firstAddress","lastAddress","broadcastAddress","subnetMask","subnetMaskLength","numHosts","contains","other","cidrSubnet","not","or","isEqual","isPrivate","isPublic","isLoopback","loopback","address","all","interfaces","networkInterfaces","filter","details","keys","nic","addresses","Boolean","ipl","endianness","hostname","location","loadavg","uptime","freemem","MAX_VALUE","totalmem","cpus","release","navigator","appVersion","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","InventoriesCodec","MessageStructureCodec","VersionCodec","BooleanCodec","byteCodec","_Inventory","IPV4_PREFIX","buffer12","bvalue","nvalue","stop","_MessageStructureCodec","MessageCommandCodec","hex","IpCodec","MAGIC","SERVICE_BIT_NAME","SERVICE_BIT_VALUE","SERVICE_BITS","NODE_NETWORK","bit","NODE_GETUTXO","NODE_BLOOM","NODE_WITNESS","NODE_XTHIN","NODE_COMPACT_FILTERS","NODE_NETWORK_LIMITED","__webpack_exports__"],"sourceRoot":""}